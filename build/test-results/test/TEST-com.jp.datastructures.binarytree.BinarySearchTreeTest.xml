<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jp.datastructures.binarytree.BinarySearchTreeTest" tests="15" skipped="0" failures="0" errors="0" timestamp="2019-03-28T21:45:23" hostname="DESKTOP-DILTDO4" time="0.008">
  <properties/>
  <testcase name="postorder1" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.001"/>
  <testcase name="postorder2" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="delete" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.001"/>
  <testcase name="findMaxDoesNotExist" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="insert" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="preorder1" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.001"/>
  <testcase name="preorder2" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="findMaxExists" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="findMinExists" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.001"/>
  <testcase name="inorder1" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="inorder2" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.002"/>
  <testcase name="findHeightNullRoot" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="findHeightAtRoot" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="findMinDoesNotExist" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <testcase name="findHeightTypical" classname="com.jp.datastructures.binarytree.BinarySearchTreeTest" time="0.0"/>
  <system-out><![CDATA[Postorder:
6
8
15
60
12
10
Expected:
6
8
15
60
12
10
Postorder:
6
9
8
11
33
13
12
10
Expected:
6
9
8
11
33
13
12
10 
Inorder:
6
8
9
10
11
12
13
33
Preorder:
10
8
6
12
60
15
Expected:
10
8
6
12
60
15
Preorder:
10
8
6
9
12
11
13
33
Expected:
10
8
6
9
12
11
13
33
Inorder:
6
8
10
12
15
60
Expected:
6
8
10
12
15
60
Inorder:
6
8
9
10
11
12
13
33
Expected:
6
8
9
10
11
12
13
33
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
